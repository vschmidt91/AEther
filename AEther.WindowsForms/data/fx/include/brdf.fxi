
#ifndef PI
#define PI 3.14159
#endif

/*
float BRDF_D(float NoH, float a2)
{
	// GGX (Trowbridge-Reitz)
	float d = lerp(1, a2, NoH * NoH);
	return a2 / (PI * d * d);
}

float BRDF_G(float VoN, float a2)
{
	return VoN + sqrt(a2 + (1 - a2) * VoN * VoN);
}
*/

float BRDF_D(float NoH, float a2)
{
	// GGX (Trowbridge-Reitz)
	float d = lerp(1, a2, NoH * NoH);
	return a2 / (PI * d * d);
}

float BRDF_G(float XoH, float XoN, float a2)
{
	XoH = saturate(XoH);
	float XoH2 = XoH * XoH;
	float tan2 = (1 - XoH2) / XoH2;
	return 2 * step(0,  XoH) / (1 + sqrt(1 + a2 * tan2));
}

float3 BRDF_F(float LoH, float3 f0)
{
	// Schlick
	return lerp(f0, 1, pow(1 - LoH, 5));
}

float3 BRDFref(float3 l, float3 v, float3 n, float3 f0, float a2)
{

	float3 h = normalize(l + v);

	float3 x = .25;

	float LoH = saturate(dot(l, h));
	x *= BRDF_D(dot(h, n), a2);
	x *= BRDF_F(LoH, f0);
	//x *= BRDF_G(dot(v, h), dot(v, n), a2);
	//x *= BRDF_G(LoH, dot(l, n), a2);
	x /= LoH * LoH; // Kelemen

	return x;

}

float3 BRDF(float3 l, float3 v, float3 n, float3 f0, float a2)
{

	float3 h = normalize(l + v);
		
	float LoH = saturate(dot(l, h));
	float NoH = saturate(dot(n, h));

	float3 f = lerp(f0, 1, pow(1 - LoH, 5));
	float den = lerp(1, a2, NoH * NoH) * LoH;

	return f * a2 / (4 * PI * den * den);

}