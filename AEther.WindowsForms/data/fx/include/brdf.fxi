
#ifndef PI
#define PI 3.14159
#endif

float BRDF_D(float nh, float a2)
{
	// GGX (Trowbridge-Reitz)
	float d = lerp(1, a2, nh * nh);
	return a2 / (PI * d * d);
}

float BRDF_G(float VoN, float a2)
{
	return VoN + sqrt(a2 + (1 - a2) * VoN * VoN);
}

float3 BRDF_F(float VoH, float3 f0)
{
	// Schlick
	float q = 1 - VoH;
	float q2 = q * q;
	return lerp(f0, 1, q2 * q2 * q);
}

float3 BRDFref(float3 l, float3 v, float3 n, float3 f0, float a2)
{

	float3 h = normalize(l + v);

	float d = BRDF_D(dot(h, n), a2);
	float3 f = BRDF_F(dot(l, h), f0);
	float g = BRDF_G(dot(l, n), a2) * BRDF_G(dot(v, n), a2);

	return d * f / g;

}

float3 BRDF(float3 l, float3 v, float3 n, float3 f0, float a2)
{

	float3 h = normalize(l + v);
	float3 d = saturate(mul(float3x3(l, v, h), n));

	float3 p = lerp(float3(a2, a2, 1), float3(1, 1, a2), d * d);
	float2 g = d.xy + sqrt(p.xy);
	float3 f = lerp(f0, 1, pow(1 - dot(l, h), 5));

	return a2 * f / (PI * p[2] * p[2] * g[0] * g[1]);

}