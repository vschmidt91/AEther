
#ifndef PI
#define PI 3.14159
#endif

/*
float BRDF_D(float NoH, float a2)
{
	// GGX (Trowbridge-Reitz)
	float d = lerp(1, a2, NoH * NoH);
	return a2 / (PI * d * d);
}

float BRDF_G(float VoN, float a2)
{
	return VoN + sqrt(a2 + (1 - a2) * VoN * VoN);
}
*/

float BRDF_D(float NoH, float a2)
{
	// GGX (Trowbridge-Reitz)
	float d = lerp(1, a2, NoH * NoH);
	return step(0, NoH)  * a2 / (PI * d * d);
}

float BRDF_G(float XoH, float XoN, float a2)
{
	XoH = saturate(XoH);
	float XoH2 = XoH * XoH;
	float tan2 = (1 - XoH2) / XoH2;
	return 2 * step(0,  XoH) / (1 + sqrt(1 + a2 * tan2));
}

float3 BRDF_F(float LoH, float3 f0)
{
	// Schlick
	return lerp(f0, 1, pow(1 - LoH, 5));
}

float3 BRDFref(float3 l, float3 v, float3 n, float3 f0, float a2)
{

	float3 h = normalize(l + v);

	float3 x = 1;

	float LoH = dot(l, h);
	x *= BRDF_D(dot(h, n), a2);
	x *= BRDF_F(LoH, f0);
	x *= BRDF_G(dot(v, h), dot(v, n), a2);
	x *= BRDF_G(LoH, dot(l, n), a2);

	//x /= max(1e-3, 4 * dot(h, n) * dot(v, n));

	return x;

}

float3 BRDF(float3 l, float3 v, float3 n, float3 f0, float a2)
{

	float3 h = normalize(l + v);
	float3 d = saturate(mul(float3x3(l, v, h), n));

	float3 p = lerp(float3(a2, a2, 1), float3(1, 1, a2), d * d);
	float2 g = d.xy + sqrt(p.xy);
	float3 f = lerp(f0, 1, pow(1 - dot(l, h), 5));

	return a2 * f / (PI * p[2] * p[2] * g[0] * g[1]);

}